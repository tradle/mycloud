{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Mappings": {
    "deployment": {
      "init": {
        "deploymentUUID": "",
        "referrerUrl": "",
        "service": "tdl-yossarian-ltd",
        "stackName": "tdl-yossarian-ltd-dev",
        "stage": "dev"
      }
    },
    "org": {
      "contact": {
        "adminEmail": "mark@tradle.io"
      },
      "init": {
        "domain": "tradle.io",
        "logo": "https://tradle.io/images/logo256x.png",
        "name": "Tradle"
      }
    }
  },
  "Outputs": {
    "ApiGatewayRestApi": {
      "Value": {
        "Ref": "ApiGatewayRestApi"
      }
    },
    "AutoScalingDynamoDBRole": {
      "Value": {
        "Ref": "AutoScalingDynamoDBRole"
      }
    },
    "Bucket0Table": {
      "Description": "table that stores multiple models",
      "Value": {
        "Ref": "Bucket0Table"
      }
    },
    "DefaultEncryptionKey": {
      "Value": {
        "Ref": "DefaultEncryptionKey"
      }
    },
    "EventsTable": {
      "Description": "source of truth",
      "Value": {
        "Ref": "EventsTable"
      }
    },
    "FileUploadBucket": {
      "Description": "file upload destination for all users",
      "Value": {
        "Ref": "FileUploadBucket"
      }
    },
    "FileUploadBucketPolicy": {
      "Value": {
        "Ref": "FileUploadBucketPolicy"
      }
    },
    "IotClientRole": {
      "Description": "role assumed by every connecting client",
      "Value": {
        "Ref": "IotClientRole"
      }
    },
    "LogsBucket": {
      "Description": "logs from lambda functions",
      "Value": {
        "Ref": "LogsBucket"
      }
    },
    "ObjectsBucket": {
      "Description": "content-addressed storage for all objects",
      "Value": {
        "Ref": "ObjectsBucket"
      }
    },
    "PrivateConfBucket": {
      "Description": "private configuration files",
      "Value": {
        "Ref": "PrivateConfBucket"
      }
    },
    "SecretsBucket": {
      "Description": "stuff",
      "Value": {
        "Ref": "SecretsBucket"
      }
    },
    "ServerlessDeploymentBucket": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.us-east-1.amazonaws.com/dev"
          ]
        ]
      }
    }
  },
  "Resources": {
    "AlertsDashboard": {
      "Properties": {
        "DashboardBody": "{\"widgets\":[{\"type\":\"metric\",\"x\":0,\"y\":0,\"width\":8,\"height\":6,\"properties\":{\"title\":\"Errors\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":8,\"y\":0,\"width\":6,\"height\":6,\"properties\":{\"title\":\"Errors\",\"view\":\"singleValue\",\"metrics\":[[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Errors\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":14,\"y\":0,\"width\":10,\"height\":6,\"properties\":{\"title\":\"Duration\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"preauth p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"preauth p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"auth p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"auth p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"inbox p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"inbox p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onmessage p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onmessage p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"jobScheduler p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"jobScheduler p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"genericJobRunner p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"genericJobRunner p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"info p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"info p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"bot_oninit p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"bot_oninit p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onresourcestream p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onresourcestream p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"graphql p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"graphql p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"setconf p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"setconf p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"import_data_utils p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"import_data_utils p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onfido p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onfido p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"cli p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"cli p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"qr p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"qr p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"deploymentPingback p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"deploymentPingback p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"confirmation p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"confirmation p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logProcessor p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logProcessor p90\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor p50\"}],[\"AWS/Lambda\",\"Duration\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor p90\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":0,\"y\":6,\"width\":8,\"height\":6,\"properties\":{\"title\":\"Invocations\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":8,\"y\":6,\"width\":6,\"height\":6,\"properties\":{\"title\":\"Invocations\",\"view\":\"singleValue\",\"metrics\":[[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Invocations\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":14,\"y\":6,\"width\":10,\"height\":6,\"properties\":{\"title\":\"API Requests\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/ApiGateway\",\"5XXError\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"Sum\",\"period\":900}],[\"AWS/ApiGateway\",\"4XXError\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"Sum\",\"period\":900}],[\"AWS/ApiGateway\",\"Count\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"Sum\",\"period\":900}]],\"region\":\"us-east-1\"}},{\"type\":\"metric\",\"x\":0,\"y\":12,\"width\":8,\"height\":6,\"properties\":{\"title\":\"Throttles\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":900,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":8,\"y\":12,\"width\":6,\"height\":6,\"properties\":{\"title\":\"Throttles\",\"view\":\"singleValue\",\"metrics\":[[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-preauth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"preauth\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-auth\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"auth\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-inbox\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"inbox\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-oniotlifecycle\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"oniotlifecycle\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onmessage\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onmessage\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-jobScheduler\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"jobScheduler\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-genericJobRunner\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"genericJobRunner\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-info\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"info\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-bot_oninit\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"bot_oninit\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onresourcestream\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onresourcestream\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-graphql\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"graphql\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-setconf\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"setconf\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-import_data_utils\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"import_data_utils\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-onfido\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"onfido\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-cli\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"cli\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-qr\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"qr\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-deploymentPingback\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"deploymentPingback\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-confirmation\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"confirmation\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logProcessor\"}],[\"AWS/Lambda\",\"Throttles\",\"FunctionName\",\"tdl-yossarian-ltd-dev-logAlertProcessor\",{\"stat\":\"Sum\",\"period\":2592000,\"region\":\"us-east-1\",\"label\":\"logAlertProcessor\"}]],\"region\":\"us-east-1\",\"period\":300}},{\"type\":\"metric\",\"x\":14,\"y\":12,\"width\":10,\"height\":6,\"properties\":{\"title\":\"API Latency\",\"view\":\"timeSeries\",\"stacked\":false,\"metrics\":[[\"AWS/ApiGateway\",\"IntegrationLatency\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"p50\",\"period\":900,\"region\":\"us-east-1\"}],[\"AWS/ApiGateway\",\"IntegrationLatency\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\"}],[\"AWS/ApiGateway\",\"Latency\",\"ApiName\",\"dev-tdl-yossarian-ltd\",{\"stat\":\"p90\",\"period\":900,\"region\":\"us-east-1\"}]],\"region\":\"us-east-1\"}}]}",
        "DashboardName": "tdl-yossarian-ltd-dev-us-east-1"
      },
      "Type": "AWS::CloudWatch::Dashboard"
    },
    "ApiGatewayApiKey1": {
      "DependsOn": "ApiGatewayDeployment1532627861551",
      "Properties": {
        "Enabled": true,
        "Name": "issue2233WorkaroundKey-tdl-yossarian-ltd-dev",
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          }
        ]
      },
      "Type": "AWS::ApiGateway::ApiKey"
    },
    "ApiGatewayDeployment1532627861551": {
      "DependsOn": [
        "ApiGatewayMethodPreauthPost",
        "ApiGatewayMethodAuthPost",
        "ApiGatewayMethodInboxPut",
        "ApiGatewayMethodInboxPost",
        "ApiGatewayMethodInfoGet",
        "ApiGatewayMethodGraphqlGet",
        "ApiGatewayMethodGraphqlPost",
        "ApiGatewayMethodOnfidoPost",
        "ApiGatewayMethodQrGet",
        "ApiGatewayMethodDeploymentpingbackPost",
        "ApiGatewayMethodConfirmationGet"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "ApiGatewayMethodAuthOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceAuth"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodAuthPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AuthLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceAuth"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodConfirmationGet": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConfirmationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceConfirmation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodConfirmationOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceConfirmation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodDeploymentpingbackOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceDeploymentpingback"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodDeploymentpingbackPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeploymentPingbackLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceDeploymentpingback"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodGraphqlGet": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GraphqlLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceGraphql"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodGraphqlOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceGraphql"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodGraphqlPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GraphqlLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceGraphql"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodInboxOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,PUT'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceInbox"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodInboxPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InboxLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceInbox"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodInboxPut": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InboxLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceInbox"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodInfoGet": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "InfoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodInfoOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceInfo"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodOnfidoOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceOnfido"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodOnfidoPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "OnfidoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceOnfido"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodPreauthOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePreauth"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodPreauthPost": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "PreauthLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourcePreauth"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodQrGet": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QrLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceQr"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayMethodQrOptions": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Tradle-Sig,X-Tradle-Auth,cache'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": ""
              },
              "StatusCode": "200"
            }
          ],
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseModels": {
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ],
        "RequestParameters": {
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceQr"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "ApiGatewayResourceAuth": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "auth",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceConfirmation": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "confirmation",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceDeploymentpingback": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "deploymentPingback",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceGraphql": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "graphql",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceInbox": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "inbox",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceInfo": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "info",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceOnfido": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "onfido",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourcePreauth": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "preauth",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayResourceQr": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "qr",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "ApiGatewayRestApi": {
      "Properties": {
        "BinaryMediaTypes": [
          "*/*"
        ],
        "Name": "dev-tdl-yossarian-ltd"
      },
      "Type": "AWS::ApiGateway::RestApi"
    },
    "ApiGatewayUsagePlan": {
      "DependsOn": "ApiGatewayDeployment1532627861551",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "Stage": "dev"
          }
        ],
        "Description": "Usage plan for tdl-yossarian-ltd dev stage",
        "UsagePlanName": "tdl-yossarian-ltd-dev"
      },
      "Type": "AWS::ApiGateway::UsagePlan"
    },
    "ApiGatewayUsagePlanKey1": {
      "Properties": {
        "KeyId": {
          "Ref": "ApiGatewayApiKey1"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "ApiGatewayUsagePlan"
        }
      },
      "Type": "AWS::ApiGateway::UsagePlanKey"
    },
    "AuthLambdaFunction": {
      "DependsOn": [
        "AuthLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-auth",
        "Handler": "lib/in-house-bot/lambda/http/auth.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "AuthLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "AuthLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-auth",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "AutoScalingDynamoDBRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "application-autoscaling.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:UpdateTable"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:dynamodb:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":*:table/tdl-yossarian-ltd-dev-*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:PutMetricAlarm",
                    "cloudwatch:DeleteAlarms"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "tdl-yossarian-ltd-dev-us-east-1-AutoScalingDynamoDBPolicy"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "AwsAlertsAlarm": {
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Fn::FindInMap": [
                "org",
                "contact",
                "adminEmail"
              ]
            },
            "Protocol": "email"
          }
        ],
        "TopicName": "tdl-yossarian-ltd-dev-alerts-alarm"
      },
      "Type": "AWS::SNS::Topic"
    },
    "BotUnderscoreoninitLambdaFunction": {
      "DependsOn": [
        "BotUnderscoreoninitLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-bot_oninit",
        "Handler": "lib/in-house-bot/lambda/oninit.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "BotUnderscoreoninitLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-bot_oninit",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "Bucket0Table": {
      "DependsOn": [
        "EventsTable"
      ],
      "Description": "table that stores multiple models",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "__h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x0h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x0r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x1h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x1r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x2h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x2r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x3h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x3r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x4h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x4r__",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "idx0",
            "KeySchema": [
              {
                "AttributeName": "__x0h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x0r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx1",
            "KeySchema": [
              {
                "AttributeName": "__x1h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x1r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx2",
            "KeySchema": [
              {
                "AttributeName": "__x2h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x2r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx3",
            "KeySchema": [
              {
                "AttributeName": "__x3h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x3r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx4",
            "KeySchema": [
              {
                "AttributeName": "__x4h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x4r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "__h__",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "__r__",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 10,
          "WriteCapacityUnits": 10
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "TableName": "tdl-yossarian-ltd-dev-bucket-0"
      },
      "Type": "AWS::DynamoDB::Table"
    },
    "CliLambdaFunction": {
      "DependsOn": [
        "CliLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-cli",
        "Handler": "lib/in-house-bot/lambda/cli.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 300
      },
      "Type": "AWS::Lambda::Function"
    },
    "CliLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-cli",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "ConfirmationLambdaFunction": {
      "DependsOn": [
        "ConfirmationLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-confirmation",
        "Handler": "lib/in-house-bot/lambda/http/confirmation.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "ConfirmationLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfirmationLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "ConfirmationLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-confirmation",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "DefaultEncryptionKey": {
      "Properties": {
        "Description": "Encryption key for secrets in SSM",
        "EnableKeyRotation": false,
        "Enabled": true,
        "KeyPolicy": {
          "Id": "tdl-yossarian-ltd-dev-us-east-1-default-key-policy",
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                  }
                ]
              },
              "Resource": "*",
              "Sid": "Allow access for Key Administrators"
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:ListGrants",
                "kms:RevokeGrant"
              ],
              "Condition": {
                "Bool": {
                  "kms:GrantIsForAWSResource": true
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                  }
                ]
              },
              "Resource": "*",
              "Sid": "Allow attachment of persistent resources"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "IamRoleLambdaExecution",
                      "Arn"
                    ]
                  }
                ]
              },
              "Resource": "*",
              "Sid": "Allow use of the key"
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "tradle",
            "Value": "tdl-yossarian-ltd-dev-us-east-1"
          }
        ]
      },
      "Type": "AWS::KMS::Key"
    },
    "DeploymentPingbackLambdaFunction": {
      "DependsOn": [
        "DeploymentPingbackLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-deploymentPingback",
        "Handler": "lib/in-house-bot/lambda/http/deployment-pingback.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "DeploymentPingbackLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeploymentPingbackLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "DeploymentPingbackLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-deploymentPingback",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "EventsTable": {
      "Description": "source of truth",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "tdl-yossarian-ltd-dev-events"
      },
      "Type": "AWS::DynamoDB::Table"
    },
    "FileUploadBucket": {
      "DeletionPolicy": "Retain",
      "Description": "file upload destination for all users",
      "Properties": {
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 3600
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "FileUploadBucketPolicy": {
      "Properties": {
        "Bucket": {
          "Ref": "FileUploadBucket"
        },
        "PolicyDocument": {
          "Id": "FileUploadBucketPolicy",
          "Statement": [
            {
              "Action": [
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "IotClientRole",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "FileUploadBucket"
                      },
                      "/",
                      "${aws:userid}",
                      "/*"
                    ]
                  ]
                }
              ],
              "Sid": "PutAccess"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::S3::BucketPolicy"
    },
    "GenericJobRunnerFunctionErrorsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "GenericJobRunnerLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "GenericJobRunnerFunctionInvocationsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "GenericJobRunnerLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 50,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "GenericJobRunnerLambdaFunction": {
      "DependsOn": [
        "GenericJobRunnerLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-genericJobRunner",
        "Handler": "lib/in-house-bot/lambda/job-runner.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 300
      },
      "Type": "AWS::Lambda::Function"
    },
    "GenericJobRunnerLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-genericJobRunner",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "GraphqlFunctionErrorsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "GraphqlLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "GraphqlFunctionInvocationsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "GraphqlLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 50,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "GraphqlFunctionThrottlesAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "GraphqlLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "GraphqlLambdaFunction": {
      "DependsOn": [
        "GraphqlLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-graphql",
        "Handler": "lib/in-house-bot/lambda/http/graphql.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "GraphqlLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GraphqlLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "GraphqlLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-graphql",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "IamRoleLambdaExecution": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-preauth:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-auth:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-inbox:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-oniotlifecycle:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onmessage:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-jobScheduler:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-genericJobRunner:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-info:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-bot_oninit:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onresourcestream:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-graphql:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-setconf:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-import_data_utils:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onfido:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-cli:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-qr:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-deploymentPingback:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-confirmation:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-logProcessor:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-logAlertProcessor:*"
                    }
                  ]
                },
                {
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-preauth:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-auth:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-inbox:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-oniotlifecycle:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onmessage:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-jobScheduler:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-genericJobRunner:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-info:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-bot_oninit:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onresourcestream:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-graphql:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-setconf:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-import_data_utils:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-onfido:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-cli:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-qr:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-deploymentPingback:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-confirmation:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-logProcessor:*:*"
                    },
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/tdl-yossarian-ltd-dev-logAlertProcessor:*:*"
                    }
                  ]
                },
                {
                  "Action": [
                    "dynamodb:CreateTable",
                    "dynamodb:DescribeTable",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:DescribeStream",
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:ListStreams"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/tdl-yossarian-ltd-dev-*"
                    }
                  ]
                },
                {
                  "Action": [
                    "cloudformation:ListStackResources",
                    "cloudformation:GetTemplate",
                    "cloudformation:UpdateTerminationProtection",
                    "cloudformation:UpdateStack"
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/tdl-yossarian-ltd-dev/*"
                  }
                },
                {
                  "Action": [
                    "lambda:UpdateFunctionConfiguration",
                    "lambda:ListFunctions"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:InvokeAsync",
                    "lambda:AddPermission",
                    "lambda:GetPolicy"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "lambda:GetFunctionConfiguration"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:tdl-yossarian-ltd-dev-*"
                    }
                  ]
                },
                {
                  "Action": [
                    "s3:ListBucket",
                    "s3:PutBucketReplication",
                    "s3:PutBucketVersioning",
                    "s3:GetBucketPolicy",
                    "s3:CreateBucket"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:s3:::tdl-yossarian-ltd-dev-*"
                  ]
                },
                {
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::tdl-yossarian-ltd-dev-*/*"
                },
                {
                  "Action": [
                    "s3:GetBucketLocation",
                    "s3:ListAllMyBuckets"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::*"
                },
                {
                  "Action": [
                    "sns:AddPermission",
                    "sns:CreateTopic",
                    "sns:DeleteTopic",
                    "sns:Publish",
                    "sns:Subscribe",
                    "sns:Unsubscribe",
                    "sns:ListSubscriptions",
                    "sns:ListSubscriptionsByTopic",
                    "sns:GetTopicAttributes",
                    "sns:SetTopicAttributes"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "iot:Connect",
                    "iot:Subscribe",
                    "iot:Publish",
                    "iot:Receive",
                    "iot:DescribeEndpoint"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "sts:AssumeRole"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "IotClientRole",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "cloudfront:updateDistribution"
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "AllowCloudFrontUpdateDistribution"
                },
                {
                  "Action": [
                    "ses:SendEmail",
                    "ses:SendRawEmail",
                    "ses:GetIdentityVerificationAttributes"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListStreams"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Bucket0Table",
                        "StreamArn"
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "tdl-yossarian-ltd",
                  "lambda"
                ]
              ]
            }
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "tdl-yossarian-ltd",
              "dev",
              "us-east-1",
              "lambdaRole"
            ]
          ]
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "ImportUnderscoredataUnderscoreutilsLambdaFunction": {
      "DependsOn": [
        "ImportUnderscoredataUnderscoreutilsLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-import_data_utils",
        "Handler": "lib/in-house-bot/lambda/import-data-utils.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "ImportUnderscoredataUnderscoreutilsLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-import_data_utils",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "InboxLambdaFunction": {
      "DependsOn": [
        "InboxLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-inbox",
        "Handler": "lib/in-house-bot/lambda/http/inbox.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "InboxLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "InboxLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "InboxLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-inbox",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "InfoLambdaFunction": {
      "DependsOn": [
        "InfoLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-info",
        "Handler": "lib/in-house-bot/lambda/http/info.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "InfoLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "InfoLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "InfoLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-info",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "Initialize": {
      "DependsOn": "ApiGatewayApiKey1",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BotUnderscoreoninitLambdaFunction",
            "Arn"
          ]
        },
        "commit": "e5f4b91c",
        "deploymentUUID": {
          "Fn::FindInMap": [
            "deployment",
            "init",
            "deploymentUUID"
          ]
        },
        "domain": {
          "Fn::FindInMap": [
            "org",
            "init",
            "domain"
          ]
        },
        "logo": {
          "Fn::FindInMap": [
            "org",
            "init",
            "logo"
          ]
        },
        "name": {
          "Fn::FindInMap": [
            "org",
            "init",
            "name"
          ]
        },
        "referrerUrl": {
          "Fn::FindInMap": [
            "deployment",
            "init",
            "referrerUrl"
          ]
        }
      },
      "Type": "Custom::InitializeDeployment"
    },
    "IotClientRole": {
      "Description": "role assumed by every connecting client",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                  }
                ],
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:logs:::log-group:/aws/lambda/*:*:*"
                },
                {
                  "Action": [
                    "iot:Connect"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:iot",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "client/${iot:ClientId}"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "iot:Publish"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:iot",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "topic/tdl-yossarian-ltd-dev/${iot:ClientId}/pub/outbox"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "iot:Subscribe"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:iot",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "topicfilter/tdl-yossarian-ltd-dev/${iot:ClientId}/sub/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "iot:Receive"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:iot",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "topic/tdl-yossarian-ltd-dev/${iot:ClientId}/sub/*"
                        ]
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "tdl-yossarian-ltd-dev-us-east-1-iotClientRolePolicy"
          }
        ],
        "RoleName": "tdl-yossarian-ltd-dev-us-east-1-iotClientRole"
      },
      "Type": "AWS::IAM::Role"
    },
    "JobSchedulerEventsRuleSchedule1": {
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "JobSchedulerLambdaFunction",
                "Arn"
              ]
            },
            "Id": "jobSchedulerSchedule"
          }
        ]
      },
      "Type": "AWS::Events::Rule"
    },
    "JobSchedulerLambdaFunction": {
      "DependsOn": [
        "JobSchedulerLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-jobScheduler",
        "Handler": "lib/in-house-bot/lambda/job-scheduler.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 30
      },
      "Type": "AWS::Lambda::Function"
    },
    "JobSchedulerLambdaPermissionEventsRuleSchedule1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "JobSchedulerLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "JobSchedulerEventsRuleSchedule1",
            "Arn"
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "JobSchedulerLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-jobScheduler",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "LogAlertProcessorLambdaFunction": {
      "DependsOn": [
        "LogAlertProcessorLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-logAlertProcessor",
        "Handler": "lib/in-house-bot/lambda/log-alert-processor.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogAlertProcessorLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-logAlertProcessor",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "LogProcessorLambdaFunction": {
      "DependsOn": [
        "LogProcessorLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-logProcessor",
        "Handler": "lib/in-house-bot/lambda/log-processor.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-preauth",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog10": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-onresourcestream",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog11": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-graphql",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog12": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-setconf",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog13": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-import_data_utils",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog14": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-onfido",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog15": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-cli",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog16": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-qr",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog17": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-deploymentPingback",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog18": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-confirmation",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog19": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-logAlertProcessor",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-auth",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-inbox",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-oniotlifecycle",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-onmessage",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-jobScheduler",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-genericJobRunner",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-info",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/tdl-yossarian-ltd-dev-bot_oninit",
              ":*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "LogProcessorLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-logProcessor",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog1": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog1",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-preauth"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog10": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog10",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onresourcestream"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog11": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog11",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-graphql"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog12": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog12",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-setconf"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog13": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog13",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-import_data_utils"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog14": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog14",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onfido"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog15": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog15",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-cli"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog16": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog16",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-qr"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog17": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog17",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-deploymentPingback"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog18": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog18",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-confirmation"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog19": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog19",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-logAlertProcessor"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog2": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog2",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-auth"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog3": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog3",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-inbox"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog4": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog4",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-oniotlifecycle"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog5": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog5",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onmessage"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog6": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog6",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-jobScheduler"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog7": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog7",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-genericJobRunner"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog8": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog8",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-info"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogProcessorLogsSubscriptionFilterCloudWatchLog9": {
      "DependsOn": "LogProcessorLambdaPermissionLogsSubscriptionFilterCloudWatchLog9",
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "LogProcessorLambdaFunction",
            "Arn"
          ]
        },
        "FilterPattern": "",
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-bot_oninit"
      },
      "Type": "AWS::Logs::SubscriptionFilter"
    },
    "LogsBucket": {
      "DeletionPolicy": "Retain",
      "Description": "logs from lambda functions",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "TransitionToGlacier",
              "Prefix": "glacier",
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "Glacier",
                  "TransitionInDays": 7
                }
              ]
            }
          ]
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "ObjectsBucket": {
      "DeletionPolicy": "Retain",
      "Description": "content-addressed storage for all objects",
      "Type": "AWS::S3::Bucket"
    },
    "OnfidoLambdaFunction": {
      "DependsOn": [
        "OnfidoLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-onfido",
        "Handler": "lib/in-house-bot/lambda/http/onfido-webhook.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "OnfidoLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "OnfidoLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "OnfidoLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onfido",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "OniotlifecycleFunctionErrorsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OniotlifecycleLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OniotlifecycleFunctionInvocationsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OniotlifecycleLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 50,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OniotlifecycleFunctionThrottlesAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OniotlifecycleLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OniotlifecycleIotTopicRule1": {
      "Properties": {
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "OniotlifecycleLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "AwsIotSqlVersion": "2016-03-23",
          "RuleDisabled": "false",
          "Sql": "SELECT * as data, topic() as topic FROM '$aws/events/#' WHERE startswith(clientId, 'tdl-yossarian-ltd-dev-')"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "OniotlifecycleLambdaFunction": {
      "DependsOn": [
        "OniotlifecycleLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-oniotlifecycle",
        "Handler": "lib/in-house-bot/lambda/mqtt/oniotlifecycle.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "OniotlifecycleLambdaPermissionIotTopicRule1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "OniotlifecycleLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "OniotlifecycleIotTopicRule1"
              }
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "OniotlifecycleLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-oniotlifecycle",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "OnmessageFunctionErrorsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OnmessageLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OnmessageFunctionInvocationsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OnmessageLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Invocations",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 50,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OnmessageFunctionThrottlesAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OnmessageLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Throttles",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OnmessageIotTopicRule1": {
      "Properties": {
        "TopicRulePayload": {
          "Actions": [
            {
              "Lambda": {
                "FunctionArn": {
                  "Fn::GetAtt": [
                    "OnmessageLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          ],
          "AwsIotSqlVersion": "2016-03-23",
          "RuleDisabled": "false",
          "Sql": "SELECT encode(*, 'base64') as data, clientid() as clientId, topic() as topic FROM 'tdl-yossarian-ltd-dev/+/pub/outbox'"
        }
      },
      "Type": "AWS::IoT::TopicRule"
    },
    "OnmessageLambdaFunction": {
      "DependsOn": [
        "OnmessageLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-onmessage",
        "Handler": "lib/in-house-bot/lambda/mqtt/onmessage.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "OnmessageLambdaPermissionIotTopicRule1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "OnmessageLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "iot.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iot:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":rule/",
              {
                "Ref": "OnmessageIotTopicRule1"
              }
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "OnmessageLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onmessage",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "OnresourcestreamEventSourceMappingDynamodbBucket0Table": {
      "DependsOn": "IamRoleLambdaExecution",
      "Properties": {
        "BatchSize": 20,
        "Enabled": "True",
        "EventSourceArn": {
          "Fn::GetAtt": [
            "Bucket0Table",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "OnresourcestreamLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON"
      },
      "Type": "AWS::Lambda::EventSourceMapping"
    },
    "OnresourcestreamFunctionErrorsAlarm": {
      "Properties": {
        "AlarmActions": [
          {
            "Ref": "AwsAlertsAlarm"
          }
        ],
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "OnresourcestreamLambdaFunction"
            }
          }
        ],
        "EvaluationPeriods": 1,
        "InsufficientDataActions": [
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "OKActions": [
        ],
        "Period": 60,
        "Statistic": "Sum",
        "Threshold": 10,
        "TreatMissingData": "missing"
      },
      "Type": "AWS::CloudWatch::Alarm"
    },
    "OnresourcestreamLambdaFunction": {
      "DependsOn": [
        "OnresourcestreamLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-onresourcestream",
        "Handler": "lib/in-house-bot/lambda/onresourcestream.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "OnresourcestreamLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-onresourcestream",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "PreauthLambdaFunction": {
      "DependsOn": [
        "PreauthLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-preauth",
        "Handler": "lib/in-house-bot/lambda/http/preauth.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "PreauthLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PreauthLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "PreauthLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-preauth",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "PrivateConfBucket": {
      "DeletionPolicy": "Retain",
      "Description": "private configuration files",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "QrLambdaFunction": {
      "DependsOn": [
        "QrLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-qr",
        "Handler": "lib/in-house-bot/lambda/http/qr.handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "QrLambdaPermissionApiGateway": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QrLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "QrLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-qr",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "SecretsBucket": {
      "DeletionPolicy": "Retain",
      "Description": "stuff",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "SetconfLambdaFunction": {
      "DependsOn": [
        "SetconfLogGroup",
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/tdl-tradle-ltd/dev/1.3.0-rc.1/e5f4b91c/tdl-tradle-ltd.zip"
        },
        "Environment": {
          "Variables": {
            "BLOCKCHAIN": "ethereum:rinkeby",
            "BLUEBIRD_DEBUG": 1,
            "CORDA_API_KEY": "abc",
            "CORDA_API_URL": "http://localhost:10007/api/share",
            "DEBUG": "*lambda*,tradle*,-@tradle/dynamodb",
            "DEBUG_FORMAT": "json",
            "DEBUG_LEVEL": 4,
            "IOT_CLIENT_ID_PREFIX": "tdl-yossarian-ltd-dev-",
            "IOT_PARENT_TOPIC": "tdl-yossarian-ltd-dev",
            "NO_TIME_TRAVEL": false,
            "R_BUCKETPOLICY_FileUpload": {
              "Ref": "FileUploadBucketPolicy"
            },
            "R_BUCKET_FileUpload": {
              "Ref": "FileUploadBucket"
            },
            "R_BUCKET_Logs": {
              "Ref": "LogsBucket"
            },
            "R_BUCKET_Objects": {
              "Ref": "ObjectsBucket"
            },
            "R_BUCKET_PrivateConf": {
              "Ref": "PrivateConfBucket"
            },
            "R_BUCKET_Secrets": {
              "Ref": "SecretsBucket"
            },
            "R_BUCKET_ServerlessDeployment": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "R_KEY_DefaultEncryption": {
              "Ref": "DefaultEncryptionKey"
            },
            "R_RESTAPI_ApiGateway": {
              "Ref": "ApiGatewayRestApi"
            },
            "R_ROLE_AutoScalingDynamoDB": {
              "Ref": "AutoScalingDynamoDBRole"
            },
            "R_ROLE_IotClient": {
              "Ref": "IotClientRole"
            },
            "R_STACK": {
              "Ref": "AWS::StackId"
            },
            "R_TABLE_Bucket0": {
              "Ref": "Bucket0Table"
            },
            "R_TABLE_Events": {
              "Ref": "EventsTable"
            },
            "SERVERLESS_PREFIX": "tdl-yossarian-ltd-dev-",
            "SERVERLESS_SERVICE_NAME": "tdl-yossarian-ltd",
            "SERVERLESS_STAGE": "dev"
          }
        },
        "FunctionName": "tdl-yossarian-ltd-dev-setconf",
        "Handler": "lib/in-house-bot/lambda/set-conf.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.17",
        "Timeout": 60
      },
      "Type": "AWS::Lambda::Function"
    },
    "SetconfLogGroup": {
      "Properties": {
        "LogGroupName": "/aws/lambda/tdl-yossarian-ltd-dev-setconf",
        "RetentionInDays": 3
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx0"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx1"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx2"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx3"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx4DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx4"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx0"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx1"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx2"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx3"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx4DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "AutoScalingDynamoDBRole",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1"
      ],
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 10,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Bucket0Table"
              },
              "/index/",
              "idx4"
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdAutoScalingTargetWriteEventsTableDevUseast1": {
      "DependsOn": [
        "EventsTable",
        "AutoScalingDynamoDBRole"
      ],
      "Properties": {
        "MaxCapacity": 100,
        "MinCapacity": 5,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "EventsTable"
              }
            ]
          ]
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "AutoScalingDynamoDBRole",
            "Arn"
          ]
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx4DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx4DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx4DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx4DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 70
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableDevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableDevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableDevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx0DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx0DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx0DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx1DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx1DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx1DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx2DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx2DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx2DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx4DevUseast1": {
      "DependsOn": [
        "Bucket0Table",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx4DevUseast1",
        "tdlyossarianltdTableScalingPolicyReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetReadBucket0TableIdx3DevUseast1",
        "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx3DevUseast1",
        "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx3DevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteBucket0TableIdx4DevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteBucket0TableIdx4DevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    },
    "tdlyossarianltdTableScalingPolicyWriteEventsTableDevUseast1": {
      "DependsOn": [
        "EventsTable",
        "tdlyossarianltdAutoScalingTargetWriteEventsTableDevUseast1"
      ],
      "Properties": {
        "PolicyName": "tdlyossarianltdTableScalingPolicyWriteEventsTableDevUseast1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "tdlyossarianltdAutoScalingTargetWriteEventsTableDevUseast1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50
        }
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
    }
  }
}

AWSTemplateFormatVersion: '2010-09-09'
Description: Resource Discovery Helper

Resources:

  IamRoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: "/"
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          - Action:
            - iot:DescribeEndpoint
            Effect: Allow
            Resource: "*"
          Version: '2012-10-17'
        PolicyName: discoveryLambdaPolicy

  LambdaLoadEnv:
    Type: AWS::Lambda::Function
    DependsOn:
      - LogGroupLoadEnv
    Properties:
      Code:
        ZipFile: >
          const AWS = require('aws-sdk');
          const response = require('cfn-response');
          const iot = new AWS.Iot();

          const getEndpoint = async () => {
            const { endpointAddress } = await iot.describeEndpoint({ 
              endpointType: 'iot:Data-ATS' 
            }).promise();

            return endpointAddress;
          };

          exports.handler = (event, context) => {
            getEndpoint().then(iotEndpoint => {
              response.send(event, context, response.SUCCESS, { iotEndpoint });
            }, err => {
              response.send(event, context, { message: err.message, stack: err.stack });
            });
          };

      FunctionName: 
        Fn::Sub: ${AWS::StackName}-load-env
      Handler: index.handler
      MemorySize: 1024
      Role:
        Fn::GetAtt: IamRoleLambdaExecution.Arn
      Runtime: nodejs14.x
      Timeout: 60

  EnvironmentVariables:
    Type: Custom::EnvironmentVariables
    Properties:
      ServiceToken:
        Fn::GetAtt: LambdaLoadEnv.Arn

  LogGroupLoadEnv:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: 
        Fn::Sub: /aws/lambda/${AWS::StackName}-load-env
      RetentionInDays: 1

Outputs:
  IotEndpoint: 
    Value:
      Fn::GetAtt: EnvironmentVariables.iotEndpoint